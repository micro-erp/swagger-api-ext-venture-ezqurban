openapi: 3.0.0
info:
  title: EZQurban Ventures
  description: Public API for EZQurban Clients
  version: 1.0.0
servers:
  - url: https://ventures.ezqurban-staging-api.microerp.io/v1.0
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
    merchantId:
      type: apiKey
      in: header
      name: x-merchant-id
  schemas:
    Category:
      type: object
      properties:
        slugId:
          type: string
        name:
          type: string
    Package:
      type: object
      properties:
        id:
          type: integer
          format: int64
        slugId:
          type: string
        name:
          type: string
        sku:
          type: string
        active:
          type: boolean
        description:
          type: string
        pricing:
          type: object
          properties:
            amount:
              type: number
              format: float
            currency:
              type: string
              example: MYR
        media:
          type: object
          properties:
            url:
              type: string
            type:
              type: string
              example: image
            mime:
              type: string
              example: image/png
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              slugId:
                type: string
              sku:
                type: string
              name:
                type: string
              quantity:
                type: integer
                format: int32
    CheckoutItem:
      type: object
      required:
        - packageId
        - packageQuantity
        - participantName
      properties:
        packageId:
          type: integer
          format: int64
        packageQuantity:
          type: integer
          format: int32
        participantName:
          type: string
    Buyer:
      type: object
      required:
        - name
        - email
        - phoneNumber
        - identityNumber
      properties:
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        identityNumber:
          type: string
    ShippingAddress:
      type: object
      required:
        - name
        - email
        - phoneNumber
        - addressLine1
        - addressLine2
        - postcode
        - city
        - state
        - country
      properties:
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        postcode:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
    Checkout:
      type: object
      required:
        - items
        - buyer
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutItem'
        buyer:
          $ref: '#/components/schemas/Buyer'
        ShippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
        notes:
          type: string
    PaymentTransaction:
      type: object
      required:
       - paidAmount
       - currency
       - paymentMethod
       - referenceNumber
      properties:
        paidAmount:
          type: number
          format: float
        currency:
          type: string
          example: MYR
        paymentMethod:
          type: string
          enum: [BANK_TRANSFER, FPX, CREDIT_CARD, CASH, CHEQUE]
        referenceNumber:
          type: string
        remarks:
          type: string
    Payment:
      type: object
      required:
       - orderId
       - totalAmount
       - currency
       - transactions
      properties:
        orderId:
          type: string
          format: ${order.id}-${order.slugId}
          example: 1-byq2lz
        totalAmount:
          type: number
          format: float
        currency:
          type: string
          example: MYR
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
    OrderHistory:
      type: object
      properties:
        status:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
    Order: 
      type: object
      properties:
        id:
          type: integer
          format: int64
        slugId:
          type: string
        status:
          type: string
          enum: [pending_payment, payment_received, confirmed, processing, assigned, executed, completed, cancelled]
    MainOrder:
      type: object
      properties:
        id:
          type: integer
          format: int64
        slugId:
          type: string
        totalPrice:
          type: number
          format: float
        totalPayable:
          type: number
          format: float
        currency:
          type: string
          example: MYR
        status:
          type: string
          enum: [pending_payment, payment_received, confirmed, processing, partial_processing, completed, cancelled]
        isPaid:
          type: boolean
        paidAt:
          type: string
          format: date-time
        isConfirmed:
          type: boolean
        confirmedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        notes:
          type: string
        buyer:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            phoneNumber:
              type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        payment:
          $ref: '#/components/schemas/Payment'

security:
  - apiKey: []
  - merchantId: []
tags:
  - name: Packages
  - name: Orders
paths:
  /categories:
    get:
      tags:
        - Packages
      summary: Get Available Categories
      description: Get list of available categories.
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /packages:
    get:
      tags:
        - Packages
      summary: Get Available Packages
      description: Get list of available packages.
      parameters:
        - name: categorySlugId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Package'
  /orders/checkout:
    post:
      tags:
        - Orders
      summary: Checkout Order
      description: Create an order and marked status as `pending`.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Checkout'
            example:
              items:
                - packageId: 14
                  packageQuantity: 1
                  participantName: John Doe
                - packageId: 14
                  packageQuantity: 3
                  participantName: John Doe Jr.
              buyer:
                name: John Doe
                email: john.doe@example.com
                phoneNumber: '+601122334411'
                identityNumber: C7119685
              shippingAddress:
                name: John Doe
                email: john.doe@example.com
                phoneNumber: '+601122334411'
                addressLine1: Address Line 1
                addressLine2: Address Line 2
                postcode: '12312'
                city: Kuala Lumpur
                state: W. P. Kuala Lumpur
                country: Malaysia
              notes: This is just a note
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/MainOrder'
  /orders/confirmed:
    post:
      tags:
        - Orders
      summary: Order Payment Received
      description: Create order's payment and marked status as `confirmed`. Confirmed order is where the payment is recevied and confirmed.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/MainOrder'
  /orders:
    get:
      tags:
        - Orders
      summary: Get Orders
      parameters:
        - name: identityNumber
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json: 
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MainOrder'
  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get Order
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/MainOrder'
  /orders/{id}/items/{item-id}:
    get:
      tags:
        - Orders
      summary: Get Order Item
      parameters:
        - name: id
          in: path
          schema:
            type: string
          example: byq2lz
          required: true
        - name: item-id
          in: path
          schema:
            type: string
          example: byq2lz33bezw
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json: 
              schema:
                type: object
                properties:
                  item: 
                    $ref: '#/components/schemas/Order'
                  package:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      slugId:
                        type: string
                      name:
                        type: string
                      sku:
                        type: string
                      quantity:
                        type: integer
                        format: int32
                      image:
                        type: string
                        format: uri      
                  additionalInfo:
                    type: object
                    properties:
                      executionCountry:
                        type: string
                      executionLocation:
                        type: string
                      executionDate:
                        type: string
                      executionHijriDate:
                        type: string
                      participantName:
                        type: string 
                  shippingAddress:
                    $ref: '#/components/schemas/ShippingAddress'
                  histories:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderHistory'
